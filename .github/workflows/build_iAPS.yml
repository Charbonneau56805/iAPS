name: Build iAPS
run-name: Build iAPS (${{ github.ref_name }})

on:
  workflow_dispatch: {}   # makes it appear in Actions and runnable

env:
  TEAMID: ${{ secrets.TEAMID }}
  FASTLANE_ISSUER_ID: ${{ secrets.FASTLANE_ISSUER_ID }}
  FASTLANE_KEY_ID: ${{ secrets.FASTLANE_KEY_ID }}
  FASTLANE_KEY: ${{ secrets.FASTLANE_KEY }}
  MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  GH_PAT: ${{ secrets.GH_PAT }}
  CERT_PROFILE_BASE64: ${{ secrets.CERT_PROFILE_BASE64 }}

jobs:
  validate:
    name: Validate
    uses: ./.github/workflows/validate_secrets.yml
    secrets: inherit

  build:
    name: Build
    needs: validate
    runs-on: macos-15
    permissions:
      contents: write
    steps:
      - name: Select Xcode version
        run: sudo xcode-select --switch /Applications/Xcode_16.3.app/Contents/Developer

      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          submodules: recursive
          ref: ${{ github.ref_name }}

      - name: Patch Match Tables (quiet output)
        run: |
          set -e
          find /usr/local/lib/ruby/gems -name table_printer.rb | xargs sed -i "" "/puts(Terminal::Table.new(params))/d"

      - name: Install project dependencies
        run: bundle install

      - name: Install provisioning profile (optional)
        if: ${{ env.CERT_PROFILE_BASE64 != '' }}
        shell: bash
        run: |
          set -euo pipefail
          echo "$CERT_PROFILE_BASE64" | base64 -d > FreeAPS_Appstore.mobileprovision
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          cp FreeAPS_Appstore.mobileprovision "$HOME/Library/MobileDevice/Provisioning Profiles/"

      - name: Sync clock (runner quirk)
        run: sudo sntp -sS time.windows.com

      - name: Fastlane Build & Archive
        run: bundle exec fastlane build_iAPS
        env:
          TEAMID: ${{ env.TEAMID }}
          GH_PAT: ${{ env.GH_PAT }}
          FASTLANE_KEY_ID: ${{ env.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ env.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ env.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ env.MATCH_PASSWORD }}

      - name: Fastlane upload to TestFlight
        run: bundle exec fastlane release
        env:
          TEAMID: ${{ env.TEAMID }}
          GH_PAT: ${{ env.GH_PAT }}
          FASTLANE_KEY_ID: ${{ env.FASTLANE_KEY_ID }}
          FASTLANE_ISSUER_ID: ${{ env.FASTLANE_ISSUER_ID }}
          FASTLANE_KEY: ${{ env.FASTLANE_KEY }}
          MATCH_PASSWORD: ${{ env.MATCH_PASSWORD }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            artifacts
            buildlog
